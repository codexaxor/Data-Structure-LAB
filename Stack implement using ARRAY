#include<bits/stdc++.h>
using namespace std;

#define S 100000


int test[S],choice,n,top,x,i; int find_value;


void push()
{
    if(top>=n-1)
    {
        printf("\n\tSTACK [[ over flow ]]");
        
    }
    else
    {
        printf(" Enter a value to be pushed: ");
        scanf("%d",&x);
        top++;
        test[top]=x;
    }
}
void pop()
{
    if(top<=-1)
    {
        printf("\n\t Stack [[ under flow ]] ");
    }
    else
    {
        printf("\n\t The popped elements is %d",test[top]);
        top--;
    }
}
void display()
{
    if(top>=0)
    {
        printf("\n The elements in STACK \n");
        for(i=top; i>=0; i--)
            printf("\n%d",test[i]);
       // printf("\n Press Next Choice");
    }
    else
    {
        printf("\n The STACK is empty");
    }
    
}

void Search_value()
{
    if (top>=0) 
    {
        printf("Enter value to Find : ");
        scanf("%d",&find_value);

        for (i=top; i>=0; i--) {
        
            if ( find_value == test[i] ) {
                printf("\n Element found !!\n");
                break;
            }
        
        }
        if (i==-1)
        {
            printf("Element not found!\n");
        }
    }
    else
    {
        printf("\n STACK is Empty!\n");
    }
}



int main()
{
    
    top=-1;
    printf("\n Enter the size of STACK [MAX=100000] : ");
    scanf("%d",&n);
    
    printf("\n\t STACK OPERATIONS USING ARRAY");
    printf("\n\t********************************");
    printf("\n\t 1.PUSH\n\t 2.POP\n\t 3.DISPLAY\n\t 4.SEARCH\n\t 5.Exit");
    printf("\n\t********************************");
    do
    {
        printf("\n Enter Choice: ");
        scanf("%d",&choice);
        
        switch(choice)
        {
            case 1:
            {
                push();
                break;
            }
            case 2:
            {
                pop();
                break;
            }
            case 3:
            {
                display();
                break;
            }
            case 4:
            {
                Search_value();
                break;
            }
            case 5:
            {
                printf("\n\t EXIT ");
                break;
            }
            default:
            {
                printf ("\n\t INVALID INPUT");
            }
                
        }
    }
    while(choice!=5);

    return 0;
}

